@using Microsoft.EntityFrameworkCore.Infrastructure
@using lab2.Presentation.ATM
@model lab2.Presentation.ATM.AccountDTO

<div class="w-full min-h-screen bg-white">
    <div>
        <div class="h-48 w-full bg-cover bg-black" style="background-image:url(https://images.unsplash.com/photo-1559509547-cebb0e1da8da?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTd8fGJsdWUlMjBza3l8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60)">

        </div>
        <div class="px-6 md:px-32 flex justify-between lg:flex-row flex-col">
            <div class="flex lg:flex-row flex-col">

                <p class="lg:ml-36 mt-16 lg:mt-0 pl-4 text-3xl font-semibold py-5">
                    ATM
                </p>
            </div>

        </div>

        <div class="grid grid-cols-2 gap-2">
            <div>

                <h3 class="text-2xl font-bold mb-4 text-center">$@Model.Amount</h3>
                <div class="flex justify-center h-screen items-center">

                    <form asp-controller="ATM" asp-action="Credit" method="post" class='flex max-w-sm w-full h-64 justify-center bg-white shadow-md rounded-lg overflow-hidden mx-auto flex flex-col p-5'>
                        <h3 class="text-2xl font-bold mb-4">Credit</h3>

                        <!-- This is the input component -->
                        <div class="relative h-10 input-component empty">
                            <input type="number"
                                   required
                                   step="0.01"
                                   name="Amount"
                                   class="h-full w-full border-gray-300 px-2 transition-all border-blue rounded-sm" />
                            <input type="hidden" name="Account" value="@ViewBag.Account">
                            <input type="hidden" name="Tipo" value="1">
                            <input type="hidden" name="IdAccount" value="@ViewBag.IdAccount">
                            <input type="hidden" name="Saldo" value="@Model.Amount">

                        </div>

                        <input type="submit" class="bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded">
                        </input>
                    </form>
                    <form id="formWithDraw" asp-controller="ATM" method="post" asp-action="WithDraw" class='flex max-w-sm w-full h-64 justify-center bg-white shadow-md rounded-lg overflow-hidden mx-auto flex flex-col p-5'>
                        <h3 class="text-2xl font-bold mb-4">WithDraw</h3>

                        <!-- This is the input component -->
                        <div class="relative h-10 input-component empty">
                            <input type="number"
                                   required
                                   id="withDrawAmmount"
                                   step="0.01"
                                   name="Amount"
                                   class="h-full w-full border-gray-300 px-2 transition-all border-blue rounded-sm" />
                            <input type="hidden" name="Account" value="@ViewBag.Account">
                            <input type="hidden" name="Tipo" value="2">
                            <input type="hidden" name="IdAccount" value="@ViewBag.IdAccount">
                            <input type="hidden" name="Saldo" value="@Model.Amount">
                        </div>

                        <input type="submit" class="bg-green-500 hover:bg-green-400 text-white font-bold py-2 px-4 border-b-4 border-green-700 hover:border-green-500 rounded">

                    </form>
                </div>


            </div>
            <div>
                <div class="container mb-2 flex mx-auto w-full items-center justify-center">
                    <!--PRINCIPIO DE LA LISTA-->
                    @if (@ViewBag.Transactions != null)
                    {
                        <ul class="flex flex-col p-4">
                            @foreach (lab2.Domain.DTOs.TransactionsDTO transaccion in @ViewBag.Transactions)
                            {
                                <li class="border-gray-400 flex flex-row mb-2">
                                    <div class="select-none rounded-md flex flex-1 items-center p-4 transition duration-500 ease-in-out transform hover:-translate-y-2 rounded-2xl border-2 p-6 mt-3 @if(@transaccion.Tipo == 1){ @Html.Raw("border-green-400") }else{ @Html.Raw(" border-red-400") }  hover:shadow-2xl">
                                        <div class="flex-1 pl-1 mr-16">
                                            <div class="font-medium">
                                                @transaccion.Fecha se @if (@transaccion.Tipo == 1)
                                                {@Html.Raw("Acredito") }
                                            else
                                            { @Html.Raw(" Retiro")} $@transaccion.Cantidad
                                        </div>
                                    </div>
                                    <div class="flex w-1/4 text-wrap text-center flex-col text-white text-bold rounded-md @if(@transaccion.Tipo == 1){ @Html.Raw("bg-green-500") }else{ @Html.Raw(" bg-red-500") } bg-red-500 justify-center items-center mr-10 p-2">
                                        $@transaccion.Saldo
                                    </div>
                                </div>
                            </li>
                        }
                        </ul>
                    }
                </div>
            </div>
        </div>

    </div>
</div>

<script>
document.addEventListener("DOMContentLoaded", function(event) {
    var total = @Html.Raw(@Model.Amount);
    var withDrawAmount = 0;
    var showAlert = true;

   document.getElementById("formWithDraw").addEventListener("submit",checkTotalWithWithDrawAmount);
    function checkTotalWithWithDrawAmount(e){
        withDrawAmount = document.getElementById("withDrawAmmount").value;
        if ((total - withDrawAmount) < 1.0 && (total - withDrawAmount) >= 0.0 && showAlert){
            e.preventDefault();
            swal({
              title: "Su cuenta se desactivara ya que con esta transaccion quedara a $1.0",
              text: "Una vez su cuenta quede a $1.0 podra realizar una peticion para que esta pueda ser reactivada",
              icon: "warning",
              buttons: true,
              dangerMode: true,
            })
            .then((willDelete) => {
              if (willDelete) {
                swal("Su petición se mandara al servidor, por favor espere", {
                  icon: "warning",
                });
                setTimeout(()=>{
                    this.submit();
                },1000);
                showAlert = false;
              } else {
                swal("Realiza tus transacciones con responsabilidad");
                showAlert = true;
              }
            });
            }else{
            showAlert = true;
            }

    }

    @if (@TempData["status"] != null){
        @switch (@TempData["status"])
        {
            case "success":
            @Html.Raw("swal('"+@TempData["message"]+"', 'Operacion Realizada con exito', 'success');");
                break;

            case "error":
            @Html.Raw("swal('"+@TempData["message"]+"', 'La cantidad ingresada no es la indicada', 'error');");
                break;
            case "alert":

                @Html.Raw("swal({title: 'Advertencia',text: 'Estimado usuario, su cuenta quedará con saldo menor a $1, por tanto, se inhabilitará. ¿Desea proceder con la operación ? ',icon: 'warning',buttons: ['No, Cancelar','Sí, Estoy seguro'],dangerMode: true,}).then(function(isConfirm) {if (isConfirm) {swal({title: 'titulo',text: 'Otro texto',icon: 'success'}).then(function() {form.submit();});} else {swal('Cancelado', 'La operación se canceló' , 'success');}})   ");
                break;
        }
        }
});
</script>


    